{"ast":null,"code":"var _jsxFileName = \"C:\\\\AppServ\\\\www\\\\adminace\\\\src\\\\context\\\\appState.js\";\nimport React, { useReducer, useEffect } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport { LOGIN_EXITOSO, LOGIN_ERROR, VALIDADO_EXITOSO } from '../types';\nimport { validToken } from '../services/auth';\n\nconst AppState = props => {\n  const initialState = {\n    token: localStorage.getItem(process.env.REACT_APP_TOKEN_NAME),\n    user: null\n  };\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  const setLogin = data => {\n    dispatch({\n      type: LOGIN_EXITOSO,\n      payload: data\n    });\n  };\n\n  const setLogout = () => {\n    dispatch({\n      type: LOGIN_ERROR\n    });\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME);\n\n    const validar = async () => {\n      console.log(\"Validando Token\");\n      const resp = await validToken();\n      if (resp.status === 200) dispatch({\n        type: VALIDADO_EXITOSO,\n        payload: resp.data\n      });else dispatch({\n        type: LOGIN_ERROR\n      });\n    };\n\n    if (token) validar();\n  }, []);\n  return /*#__PURE__*/React.createElement(appContext.Provider, {\n    value: {\n      user: state.user,\n      token: state.token,\n      setLogin,\n      setLogout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AppState;","map":{"version":3,"sources":["C:/AppServ/www/adminace/src/context/appState.js"],"names":["React","useReducer","useEffect","appContext","appReducer","LOGIN_EXITOSO","LOGIN_ERROR","VALIDADO_EXITOSO","validToken","AppState","props","initialState","token","localStorage","getItem","process","env","REACT_APP_TOKEN_NAME","user","state","dispatch","setLogin","data","type","payload","setLogout","validar","console","log","resp","status","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,UAJP;AAKA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,oBAAjC,CADY;AAEnBC,IAAAA,IAAI,EAAE;AAFa,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACG,UAAD,EAAaO,YAAb,CAApC;;AAEA,QAAMU,QAAQ,GAAGC,IAAI,IAAI;AACvBF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAElB,aADC;AAEPmB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,SAAS,GAAG,MAAM;AACtBL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEjB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBC,OAAO,CAACC,GAAR,CAAYC,oBAAjC,CAAd;;AACA,UAAMS,OAAO,GAAG,YAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAMC,IAAI,GAAG,MAAMrB,UAAU,EAA7B;AACA,UAAIqB,IAAI,CAACC,MAAL,KAAgB,GAApB,EACEV,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEhB,gBADC;AAEPiB,QAAAA,OAAO,EAAEK,IAAI,CAACP;AAFP,OAAD,CAAR,CADF,KAMEF,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEjB;AADC,OAAD,CAAR;AAGL,KAZD;;AAaA,QAAIM,KAAJ,EACEc,OAAO;AACV,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACLR,MAAAA,IAAI,EAAEC,KAAK,CAACD,IADP;AAELN,MAAAA,KAAK,EAAEO,KAAK,CAACP,KAFR;AAGLS,MAAAA,QAHK;AAILI,MAAAA;AAJK,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGf,KAAK,CAACqB,QAPT,CADF;AAWD,CAnDD;;AAqDA,eAAetB,QAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react';\r\nimport appContext from './appContext';\r\nimport appReducer from './appReducer';\r\nimport {\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  VALIDADO_EXITOSO\r\n} from '../types';\r\nimport { validToken } from '../services/auth';\r\n\r\nconst AppState = props => {\r\n  const initialState = {\r\n    token: localStorage.getItem(process.env.REACT_APP_TOKEN_NAME),\r\n    user: null,\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  const setLogin = data => {\r\n    dispatch({\r\n      type: LOGIN_EXITOSO,\r\n      payload: data\r\n    });\r\n  }\r\n\r\n  const setLogout = () => {\r\n    dispatch({\r\n      type: LOGIN_ERROR\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(process.env.REACT_APP_TOKEN_NAME);\r\n    const validar = async() => {\r\n        console.log(\"Validando Token\");\r\n        const resp = await validToken();\r\n        if (resp.status === 200)\r\n          dispatch({\r\n            type: VALIDADO_EXITOSO,\r\n            payload: resp.data\r\n          });\r\n        else\r\n          dispatch({\r\n            type: LOGIN_ERROR\r\n          });\r\n    }\r\n    if (token)\r\n      validar();\r\n  }, []);\r\n\r\n  return(\r\n    <appContext.Provider\r\n    value={{\r\n      user: state.user,\r\n      token: state.token,\r\n      setLogin,\r\n      setLogout,\r\n    }} >\r\n      {props.children}\r\n    </appContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AppState;\r\n"]},"metadata":{},"sourceType":"module"}