{"ast":null,"code":"var _jsxFileName = \"C:\\\\AppServ\\\\www\\\\adminace\\\\src\\\\components\\\\login\\\\FormRegister.js\";\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers';\nimport * as yup from \"yup\";\nimport { onRegister } from '../../services/auth';\nimport useStyles from './styles';\nimport Alert from '@material-ui/lab/Alert';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { TextField, Card, CardContent, Button, CircularProgress, Typography, Grid, Fade } from '@material-ui/core';\n\nconst FormRegister = props => {\n  var _errors$name, _errors$email, _errors$password, _errors$confirmPasswo;\n\n  const schema = yup.object().shape({\n    name: yup.string().required('Este campo es requerido'),\n    email: yup.string().email('Este campo debe contener un correo electronico valido').required('Este campo es requerido'),\n    password: yup.string().required('Este campo es requerido').matches(/(?=.*?[0-9])/, 'La contraseña debe contener un numero').min(6, 'Este campo requiere un minimo de 6 caracteres'),\n    confirmPassword: yup.string().required('Este campo es requerido').min(6, 'Este campo requiere un minimo de 6 caracteres').matches(/(?=.*?[0-9])/, 'La contraseña debe contener un numero').oneOf([yup.ref('password'), null], 'No coinciden las contraseñas')\n  });\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n\n  const Submit = async data => {\n    setLoading(true);\n    const resp = await onRegister(data);\n\n    if (resp.data) {\n      props.setShowForm(false);\n    } else {\n      if (resp.response.status === 402) setMessage(\"El correo electronico ya existe\");else setMessage(resp.response ? resp.response.data.message : \"Error de conexion\");\n    }\n\n    setLoading(false);\n  };\n\n  if (props.showform) return null;\n  return /*#__PURE__*/React.createElement(Fade, {\n    in: props.showform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n    className: classes.icono,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.titulo,\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Registro de Usuario\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: classes.subtitulo,\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Favor de llenar todos los campos\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit(Submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: errors.name,\n    helperText: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message,\n    label: \"Nombre\",\n    name: \"name\",\n    type: \"text\",\n    disabled: loading,\n    inputRef: register,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: errors.email,\n    helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,\n    label: \"Correo Electronico\",\n    name: \"email\",\n    type: \"email\",\n    disabled: loading,\n    inputRef: register,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: errors.password,\n    helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,\n    label: \"Contrase\\xF1a\",\n    name: \"password\",\n    type: \"password\",\n    disabled: loading,\n    inputRef: register,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: errors.confirmPassword,\n    helperText: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,\n    label: \"Confirmar Contrase\\xF1a\",\n    name: \"confirmPassword\",\n    type: \"password\",\n    disabled: loading,\n    inputRef: register,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.menuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    onClick: () => props.setShowForm(false),\n    disabled: loading,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }, \"Iniciar Sesion\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 6,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    disabled: loading,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Registrarse\")))), message ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    className: classes.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, message) : null)));\n};\n\nexport default FormRegister;","map":{"version":3,"sources":["C:/AppServ/www/adminace/src/components/login/FormRegister.js"],"names":["React","useState","useForm","yupResolver","yup","onRegister","useStyles","Alert","AccountCircleIcon","TextField","Card","CardContent","Button","CircularProgress","Typography","Grid","Fade","FormRegister","props","schema","object","shape","name","string","required","email","password","matches","min","confirmPassword","oneOf","ref","register","handleSubmit","errors","resolver","message","setMessage","loading","setLoading","classes","Submit","data","resp","setShowForm","response","status","showform","login","icono","titulo","subtitulo","root","menuButton","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport * as yup from \"yup\";\r\n\r\nimport { onRegister } from '../../services/auth';\r\nimport useStyles from './styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { \r\n\tTextField, \r\n\tCard, \r\n\tCardContent, \r\n\tButton, \r\n\tCircularProgress, \r\n\tTypography, \r\n\tGrid,\r\n\tFade\r\n} from '@material-ui/core';\r\n\r\nconst FormRegister = props => {\r\n\tconst schema = yup.object().shape({\r\n\t  name: yup.string()\r\n\t  \t\t\t.required('Este campo es requerido'),\r\n\t  email: yup.string()\r\n\t  \t\t\t.email('Este campo debe contener un correo electronico valido')\r\n\t  \t\t\t.required('Este campo es requerido'),\r\n\t  password: yup.string()\r\n\t  \t\t\t.required('Este campo es requerido')\r\n\t  \t\t\t.matches(/(?=.*?[0-9])/, 'La contraseña debe contener un numero')\r\n\t  \t\t\t.min(6,'Este campo requiere un minimo de 6 caracteres'),\r\n\t  confirmPassword: yup.string()\r\n\t  \t\t\t.required('Este campo es requerido')\r\n\t  \t\t\t.min(6,'Este campo requiere un minimo de 6 caracteres')\r\n\t  \t\t\t.matches(/(?=.*?[0-9])/, 'La contraseña debe contener un numero')\r\n\t  \t\t\t.oneOf([yup.ref('password'), null], 'No coinciden las contraseñas'),\r\n\t});\r\n\tconst { register, handleSubmit, errors } = useForm({\r\n    \tresolver: yupResolver(schema)\r\n  \t});\r\n\tconst [ message, setMessage ] = useState('');\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst Submit = async data => {\r\n\t\tsetLoading(true);\r\n\t\tconst resp = await onRegister(data);\r\n\t\tif (resp.data){\r\n\t\t\tprops.setShowForm(false);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif (resp.response.status === 402)\r\n\t\t\t\tsetMessage(\"El correo electronico ya existe\");\r\n\t\t\telse\r\n\t\t\t\tsetMessage(resp.response ? resp.response.data.message : \"Error de conexion\");\r\n\t\t}\r\n\r\n\t\tsetLoading(false);\r\n\t}\r\n\r\n  if (props.showform) return null;\r\n  return (\r\n  \t<Fade in={props.showform}>\r\n\t  \t<Card className={classes.login}>\r\n\t  \t\t<CardContent>\r\n\t  \t\t\t<AccountCircleIcon className={classes.icono} />\r\n\t  \t\t\t<Typography variant=\"h5\" className={classes.titulo} component=\"h2\">\r\n\t  \t\t\t\tRegistro de Usuario\r\n\t  \t\t\t</Typography>\r\n\t  \t\t\t<Typography variant=\"body2\" className={classes.subtitulo} component=\"h2\">\r\n\t  \t\t\t\tFavor de llenar todos los campos\r\n\t  \t\t\t</Typography>\r\n\t\t  \t\t<form className={classes.root} onSubmit={handleSubmit(Submit)}>\r\n\t\t  \t\t  <TextField \r\n\t\t\t      error={errors.name}\r\n\t\t\t      helperText={errors.name?.message}\r\n\t\t\t      label=\"Nombre\" \r\n\t\t\t      name=\"name\" \r\n\t\t\t      type=\"text\"\r\n\t\t\t      disabled={loading} \r\n\t\t\t      inputRef={register}\r\n\t\t\t      variant=\"outlined\" />\r\n\r\n\t\t\t      <TextField \r\n\t\t\t      error={errors.email}\r\n\t\t\t      helperText={errors.email?.message}\r\n\t\t\t      label=\"Correo Electronico\" \r\n\t\t\t      name=\"email\" \r\n\t\t\t      type=\"email\"\r\n\t\t\t      disabled={loading} \r\n\t\t\t      inputRef={register}\r\n\t\t\t      variant=\"outlined\" />\r\n\t\t\t      \r\n\t\t\t      <TextField \r\n\t\t\t      error={errors.password}\r\n\t\t\t      helperText={errors.password?.message}\r\n\t\t\t      label=\"Contraseña\" \r\n\t\t\t      name=\"password\" \r\n\t\t\t      type=\"password\"\r\n\t\t\t      disabled={loading} \r\n\t\t\t      inputRef={register}\r\n\t\t\t      variant=\"outlined\" />\r\n\r\n\t\t\t      <TextField \r\n\t\t\t      error={errors.confirmPassword}\r\n\t\t\t      helperText={errors.confirmPassword?.message}\r\n\t\t\t      label=\"Confirmar Contraseña\" \r\n\t\t\t      name=\"confirmPassword\" \r\n\t\t\t      type=\"password\"\r\n\t\t\t      disabled={loading} \r\n\t\t\t      inputRef={register}\r\n\t\t\t      variant=\"outlined\" />\r\n\t\t\t     \r\n\t\t\t    <Grid container className={classes.menuButton}>\r\n\t\t\t    \t<Grid item sm={6}>\r\n\t\t\t    \t\t<Button \r\n\t\t\t\t      \ttype=\"button\"\r\n\t\t\t\t      \tonClick={() => props.setShowForm(false)} \r\n\t\t\t\t      \tdisabled={loading}\r\n\t\t\t\t      \tcolor=\"primary\">\r\n\t\t\t\t      \t\tIniciar Sesion\r\n\t\t\t\t      \t</Button>\r\n\t\t\t    \t</Grid>\r\n\t\t\t    \t<Grid item sm={6} className={classes.button}>\r\n\t\t\t    \t\t {loading ? (\r\n\t\t\t\t\t    \t<CircularProgress /> \r\n\t\t\t\t\t    ) : (\r\n\t\t\t\t\t    \t<Button \r\n\t\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t\t      \tvariant=\"contained\" \r\n\t\t\t\t\t      \tdisabled={loading}\r\n\t\t\t\t\t      \tcolor=\"primary\">\r\n\t\t\t\t\t      \t\tRegistrarse\r\n\t\t\t\t\t      \t</Button>\r\n\t\t\t\t\t    )}\r\n\t\t\t    \t</Grid>\r\n\t\t\t    </Grid>\r\n\t\t\t    \r\n\t\t\t    </form>\r\n\t\t    \t{ message ? (\r\n\t\t    \t\t<Alert severity=\"error\" className={classes.message}> \r\n\t\t    \t\t\t{message} \r\n\t\t    \t\t</Alert>\r\n\t\t    \t) : null}\r\n\t\t    </CardContent> \r\n\t  \t</Card>\r\n  \t</Fade>\r\n  )\r\n}\r\n\r\nexport default FormRegister;"]},"metadata":{},"sourceType":"module"}