{"ast":null,"code":"var _jsxFileName = \"C:\\\\AppServ\\\\www\\\\adminace\\\\src\\\\components\\\\login\\\\FormLogin.js\";\nimport React, { useState, useContext } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { TextField, Card, CardContent, Button, CircularProgress, Typography } from '@material-ui/core';\nimport useStyles from './styles';\nimport { onLogin } from '../../services/auth';\nimport AppContext from '../../context/appContext';\n\nconst FormLogin = props => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    setLogin\n  } = useContext(AppContext);\n  const classes = useStyles();\n\n  const Submit = async data => {\n    setLoading(true);\n    /*\r\n    const resp = await onLogin(data);\r\n    if (resp.data)\r\n    \tsetLogin(resp.data);\r\n    else\r\n    \tsetMessage(resp.response ? resp.response.data.error : \"Error de conexion\");\r\n    setLoading(false);\r\n    */\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.login,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, \"Inicia Sesion\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }, \"Ingresar tu correo y contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    onSubmit: handleSubmit(Submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Correo Electronico\",\n    name: \"email\",\n    type: \"email\",\n    disabled: loading,\n    inputRef: register({\n      required: true,\n      type: 'email'\n    }),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), errors.email && \"Corre Invalido\", /*#__PURE__*/React.createElement(TextField, {\n    label: \"Contrase\\xF1a\",\n    name: \"password\",\n    type: \"password\",\n    disabled: loading,\n    inputRef: register({\n      required: true,\n      min: 6\n    }),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), errors.password && \"Contrase単a Invalida\", /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    disabled: loading,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Registrarse\"), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    disabled: loading,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }, \"Ingresar\")), message));\n};\n\nexport default FormLogin;","map":{"version":3,"sources":["C:/AppServ/www/adminace/src/components/login/FormLogin.js"],"names":["React","useState","useContext","useForm","TextField","Card","CardContent","Button","CircularProgress","Typography","useStyles","onLogin","AppContext","FormLogin","props","register","handleSubmit","errors","message","setMessage","loading","setLoading","setLogin","classes","Submit","data","login","root","required","type","email","min","password"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { TextField, Card, CardContent, Button, CircularProgress, Typography} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { onLogin } from '../../services/auth';\r\nimport AppContext from '../../context/appContext';\r\n\r\nconst FormLogin = (props) => {\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\tconst [ message, setMessage ] = useState('');\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\tconst { setLogin } = useContext(AppContext);\r\n\tconst classes = useStyles();\r\n\t\r\n\tconst Submit = async data => {\r\n\t\tsetLoading(true);\r\n\t\t/*\r\n\t\tconst resp = await onLogin(data);\r\n\t\tif (resp.data)\r\n\t\t\tsetLogin(resp.data);\r\n\t\telse\r\n\t\t\tsetMessage(resp.response ? resp.response.data.error : \"Error de conexion\");\r\n\t\tsetLoading(false);\r\n\t\t*/\r\n\t}\r\n\r\n  return (\r\n  \t<Card className={classes.login} elevation={3}>\r\n  \t\t<CardContent>\r\n  \t\t\t<Typography variant=\"h5\" component=\"h2\">\r\n  \t\t\t\tInicia Sesion\r\n  \t\t\t</Typography>\r\n  \t\t\t<Typography variant=\"body2\" component=\"h2\">\r\n  \t\t\t\tIngresar tu correo y contrase単a\r\n  \t\t\t</Typography>\r\n\t  \t\t<form className={classes.root} onSubmit={handleSubmit(Submit)}>\r\n\t\t      <TextField \r\n\t\t      label=\"Correo Electronico\" \r\n\t\t      name=\"email\" \r\n\t\t      type=\"email\"\r\n\t\t      disabled={loading} \r\n\t\t      inputRef={register({ required: true, type: 'email' })}\r\n\t\t      variant=\"outlined\" />\r\n\t\t      {errors.email && \"Corre Invalido\"}\r\n\t\t      \r\n\t\t      <TextField \r\n\t\t      label=\"Contrase単a\" \r\n\t\t      name=\"password\" \r\n\t\t      type=\"password\"\r\n\t\t      disabled={loading} \r\n\t\t      inputRef={register({ required: true, min: 6 })}\r\n\t\t      variant=\"outlined\" />\r\n\t\t      {errors.password && \"Contrase単a Invalida\"}\r\n\t\t     \r\n\t\t    <Button \r\n\t      \ttype=\"button\" \r\n\t      \tdisabled={loading}\r\n\t      \tcolor=\"primary\">\r\n\t      \t\tRegistrarse\r\n\t      \t</Button>\r\n\t\t      \t\r\n\t\t    {loading ? (\r\n\t\t    \t<div className={classes.loading}>\r\n\t\t    \t\t<CircularProgress /> \r\n\t\t    \t</div>\r\n\t\t    ) : (\r\n\t\t    \t<Button \r\n\t\t      \ttype=\"submit\" \r\n\t\t      \tvariant=\"contained\" \r\n\t\t      \tdisabled={loading}\r\n\t\t      \tcolor=\"primary\">\r\n\t\t      \t\tIngresar\r\n\t\t      \t</Button>\r\n\t\t    )}\r\n\t\t    </form>\r\n\t    \t{message}\r\n\t    </CardContent> \r\n  \t</Card>\r\n  )\r\n}\r\n\r\nexport default FormLogin;"]},"metadata":{},"sourceType":"module"}